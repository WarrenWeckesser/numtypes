name: tests

on: [push, pull_request]

jobs:
  py-np-os-matrix:
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        numpy-version: ['1.22.4', '1.23.5', '1.24.4', '1.25.2', '1.26.4']
        os: [ubuntu-latest, macos-latest]
        exclude:
        - python-version: '3.11'
          numpy-version: '1.22.4'
        - python-version: '3.12'
          numpy-version: '1.22.4'
        - python-version: '3.12'
          numpy-version: '1.23.5'
        - python-version: '3.12'
          numpy-version: '1.24.4'
        - python-version: '3.12'
          numpy-version: '1.25.2'

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        python -m pip install --upgrade setuptools
        python -m pip install meson-python pytest toml
        python -m pip install numpy==${{ matrix.numpy-version }}
    - name: Install numtypes
      run: |
        python -m pip install .
    - name: Test with pytest
      run: |
        pytest --pyargs numtypes

  numpy-main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    - name: Set up ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install libopenblas-dev
        python -m pip install --upgrade pip wheel
        python -m pip install --upgrade setuptools==59.8.0
        python -m pip install ninja meson-python pytest toml
        pushd .
        cd ..
        git clone --shallow-submodules --recurse-submodules --depth 1 https://github.com/numpy/numpy.git
        cd numpy
        # We have a shallow clone of the main branch of NumPy, which has no
        # git tags.  The code in versioneer.py requires a tag to create a
        # version, so create a tag with a blatantly fake version number.
        git config user.email "foo@example.com"
        git config user.name "Foo"
        git tag -a v999.0.0 -m "NumPy main development branch"
        python -m pip install .
        popd
    - name: Install numtypes
      run: |
        python -m pip install --no-build-isolation .
    - name: Test with pytest
      run: |
        pytest --pyargs numtypes

  windows-msvc:

    strategy:
      matrix:
        numpy-version: ['1.25.2', '1.26.4']
        python-version: ['3.10', '3.11', '3.12']
        os: ['windows-2019', 'windows-latest']
        exclude:
        - python-version: '3.12'
          numpy-version: '1.25.2'
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up msvc-dev-cmd
      uses: ilammy/msvc-dev-cmd@v1

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
        cache: 'pip'
        cache-dependency-path: 'environment.yml'

    - name: Install Python dependencies
      run: |
        pip install numpy==${{ matrix.numpy-version }} meson ninja meson-python pytest toml

    - name: Build
      run: |
        pip -v install --no-build-isolation .

    - name: Test
      run: |
        pytest --pyargs numtypes
